{"version":3,"sources":["components/Input.jsx","components/Message.jsx","components/Disconnect.jsx","components/Connected.jsx","components/Chat.jsx","redux/reducers.js","redux/store.js","index.js"],"names":["Input","userName","localStorage","getItem","pressEnter","e","key","submitMessage","state","msgIn","nameIn","bind","this","setState","document","addEventListener","removeEventListener","alert","preventDefault","setItem","props","SendMessage","className","type","placeholder","value","onChange","target","onClick","wsClose","React","Component","Message","messageClass","ownerName","includes","name","getTime","time","message","Disconnect","stance","Connected","Chat","connect","ws","WebSocket","onopen","console","log","dispatch","setTimeout","onmessage","event","newMessage","JSON","parse","data","payload","messages","sort","a","b","scrollToBottom","visibilityState","notification","Notification","from","close","onclose","reconnect","setInterval","onerror","err","error","clearInterval","id","myDiv","getElementById","scrollTop","scrollHeight","notifyMe","window","permission","requestPermission","then","WelcomeNotification","nameUser","messageText","send","stringify","timeFromServer","date","Date","addZero","getHours","getMinutes","getSeconds","i","map","index","initialState","rootReducer","action","Object","assign","concat","store","createStore","App","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.20d8f4c0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Input extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      msgIn: \"\",\r\n      nameIn: \"\",\r\n    };\r\n    this.submitMessage = this.submitMessage.bind(this);\r\n    this.pressEnter = this.pressEnter.bind(this);\r\n  }\r\n\r\n  userName = localStorage.getItem(\"userName\");\r\n\r\n  // LifeCycle\r\n\r\n  componentDidMount() {\r\n    // Chchecking for name in localStorage\r\n    if (this.userName) {\r\n      this.setState({\r\n        nameIn: localStorage.getItem(\"userName\"),\r\n      });\r\n    }\r\n    // Enter on a document level\r\n    document.addEventListener(\"keydown\", this.pressEnter, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.pressEnter, false);\r\n  }\r\n\r\n  // Functions\r\n\r\n  submitMessage(e) {\r\n    if (this.state.msgIn === \"\") {\r\n      alert(\"Enter message\");\r\n    } else {\r\n      e.preventDefault();\r\n\r\n      // Setting UserName on sending msg\r\n      if (!this.userName || this.userName !== this.state.nameIn) {\r\n        localStorage.setItem(\"userName\", this.state.nameIn);\r\n      }\r\n\r\n      // sending messages\r\n      this.props.SendMessage(this.state.nameIn, this.state.msgIn);\r\n      this.setState({\r\n        msgIn: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  pressEnter = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.submitMessage(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"input-wrapper\">\r\n        <div className=\"name-wrapper\">\r\n          <input\r\n            className=\"name\"\r\n            type=\"name\"\r\n            placeholder=\"Your name\"\r\n            value={this.state.nameIn}\r\n            onChange={(e) => {\r\n              this.setState({ nameIn: e.target.value });\r\n            }}\r\n          />\r\n          <button className=\"close\" onClick={this.props.wsClose}>\r\n            Close and Recconect\r\n            <span>\r\n              <i className=\"fas fa-plug\"></i>\r\n            </span>\r\n          </button>\r\n        </div>\r\n\r\n        <textarea\r\n          className=\"message\"\r\n          placeholder=\"type your message here\"\r\n          type=\"text\"\r\n          value={this.state.msgIn}\r\n          onChange={(e) => {\r\n            this.setState({ msgIn: e.target.value });\r\n          }}\r\n        />\r\n        <button type=\"submit\" className=\"send\" onClick={this.submitMessage}>\r\n          Send\r\n          <span>\r\n            <i className=\"fas fa-arrow-up\"></i>\r\n          </span>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\n\r\nfunction Message(props) {\r\n  let messageClass;\r\n  if(props.ownerName.includes(props.name)) {\r\n    messageClass = \"message-wrapper owner\"\r\n  } else {\r\n    messageClass = \"message-wrapper\";\r\n  }\r\n\r\n  return (\r\n    <div className={messageClass}>\r\n      <div className=\"message-content\">\r\n        <div className=\"info\">\r\n      <h4 className=\"name\">{props.name}</h4>\r\n      <p className=\"time\">{props.getTime(props.time)}</p>\r\n      </div>\r\n      <p className=\"message\">{props.message} </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\n\r\nfunction Disconnect(props) {\r\n  if (props.stance === \"disconnected\") {\r\n    return <h4> Connection lost :(</h4>;\r\n  } else return null;\r\n}\r\n\r\nexport default Disconnect;\r\n","import React from \"react\";\r\n\r\nfunction Connected(props) {\r\n  if (props.stance === \"connected\") {\r\n    return <h4> U have been connected</h4>;\r\n  } else return <h4 className = \"hidden\"> U have been connected</h4>;\r\n}\r\n\r\nexport default Connected;\r\n\r\n","import React from \"react\";\r\nimport Input from \"./Input\";\r\nimport Message from \"./Message\";\r\nimport Disconnect from \"./Disconnect\";\r\nimport Connected from \"./Connected\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Chat extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      stance: \"\",\r\n      ownerName: \"\",\r\n    };\r\n    this.getTime = this.getTime.bind(this);\r\n    this.notifyMe = this.notifyMe.bind(this);\r\n    this.scrollToBottom = this.scrollToBottom.bind(this);\r\n  }\r\n\r\n  // WS event listeners\r\n  componentDidMount() {\r\n    this.connect();\r\n    this.notifyMe();\r\n    this.setState({ ownerName: [localStorage.getItem(\"userName\")] });\r\n  }\r\n\r\n  // Functions\r\n\r\n  // Openning WS connection\r\n  connect = () => {\r\n    this.ws = new WebSocket(\"ws://st-chat.shas.tel\");\r\n\r\n    // Opening connection with animation after 5s\r\n    this.ws.onopen = () => {\r\n      console.log(\"connected\");\r\n      this.props.dispatch({ type: \"CLEAR_MESSAGES\" });\r\n      this.setState({\r\n        stance: \"connected\",\r\n      });\r\n    };\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        stance: \"waiting\",\r\n      });\r\n    }, 5000);\r\n\r\n    this.ws.onmessage = (event) => {\r\n      let newMessage = JSON.parse(event.data);\r\n      this.props.dispatch({ type: \"ADD_MESSAGES\", payload: newMessage });\r\n      this.props.messages.sort((a, b) => a.time - b.time);\r\n      this.scrollToBottom(\"messages-wrapper\");\r\n\r\n      //Setting Notifications\r\n      if (document.visibilityState !== \"visible\") {\r\n        let notification = new Notification(\r\n          \"New Message from \" + newMessage[0].from\r\n        );\r\n        setTimeout(() => notification.close(), 3000);\r\n      }\r\n    };\r\n\r\n    this.wsClose = () => {\r\n      this.ws.close();\r\n    };\r\n\r\n    // Recconection on connection closed\r\n\r\n    this.ws.onclose = () => {\r\n      console.log(\"disconnected\");\r\n      this.setState({\r\n        stance: \"disconnected\",\r\n      });\r\n\r\n      this.reconnect = setInterval(() => {\r\n        console.log(\"connecting\");\r\n        this.connect();\r\n      }, 3000);\r\n    };\r\n\r\n    this.ws.onerror = function (err) {\r\n      console.error(err);\r\n    };\r\n\r\n    // clearing Interval\r\n\r\n    if (this.reconnect) {\r\n      console.log(\"clearing Interval\");\r\n      clearInterval(this.reconnect);\r\n    }\r\n  };\r\n\r\n  // Utility Functions\r\n\r\n  scrollToBottom = (id) => {\r\n    const myDiv = document.getElementById(id);\r\n    myDiv.scrollTop = myDiv.scrollHeight;\r\n  };\r\n\r\n  notifyMe = () => {\r\n    if (!(\"Notification\" in window)) {\r\n      alert(\"This browser does not support desktop notification\");\r\n    } else if (Notification.permission === \"granted\") {\r\n    } else if (Notification.permission !== \"denied\") {\r\n      Notification.requestPermission().then(function (permission) {\r\n        if (permission === \"granted\") {\r\n          const WelcomeNotification = new Notification(\r\n            \"Welcome to the Epic Chat\"\r\n          );\r\n          setTimeout(() => WelcomeNotification.close(), 3000);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  submitMessage = (nameUser, messageText) => {\r\n    if (!this.state.ownerName.includes(localStorage.getItem(\"userName\"))) {\r\n      this.setState({\r\n        ownerName: [...this.state.ownerName, localStorage.getItem(\"userName\")],\r\n      });\r\n    }\r\n    const message = { from: nameUser, message: messageText };\r\n    this.ws.send(JSON.stringify(message));\r\n  };\r\n\r\n  getTime = (timeFromServer) => {\r\n    if (!timeFromServer) {\r\n      return;\r\n    }\r\n\r\n    function addZero(i) {\r\n      if (i < 10) {\r\n        i = \"0\" + i;\r\n      }\r\n      return i;\r\n    }\r\n\r\n    let date = new Date(timeFromServer);\r\n    return `${addZero(date.getHours())}:${addZero(date.getMinutes())}:${addZero(\r\n      date.getSeconds()\r\n    )}`;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"header\">\r\n          <h1>Epic Chat</h1>\r\n          <Connected stance={this.state.stance} />\r\n          <Disconnect stance={this.state.stance} />\r\n        </div>\r\n        <Input SendMessage={this.submitMessage} wsClose={this.wsClose} />\r\n        <div className=\"messages-wrapper\" id=\"messages-wrapper\">\r\n          {this.props.messages.map((message, index) => (\r\n            <Message\r\n              ownerName={this.state.ownerName}\r\n              key={index}\r\n              getTime={this.getTime}\r\n              time={message.time}\r\n              name={message.from}\r\n              message={message.message}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  messages: state.messages,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Chat);\r\n","const initialState = {\r\n  messages: [],\r\n};\r\n\r\nexport function addMessages(payload) {\r\n  return { type: \"ADD_MESSAGES\", payload };\r\n}\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  if (action.type === \"ADD_MESSAGES\") {\r\n    return Object.assign({}, state, {\r\n      messages: state.messages.concat(action.payload),\r\n    });\r\n  }\r\n\r\n  if (action.type === \"CLEAR_MESSAGES\") {\r\n    return Object.assign({}, state, {\r\n      messages: [],\r\n    });\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Chat from \"./components/Chat\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport \"./styles.css\";\r\n\r\nfunction App() {\r\n  window.store = store;\r\n  return (\r\n    <div className=\"app\">\r\n      <Chat />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n<Provider store={store}>\r\n<App />\r\n</Provider>\r\n, rootElement);\r\n"],"sourceRoot":""}